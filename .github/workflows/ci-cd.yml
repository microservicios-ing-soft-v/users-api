name: Build, Push & Deploy Users API to Container Apps

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ACR_NAME: ${{ secrets.ACR_NAME }}
  KEY_VAULT_NAME: ${{ secrets.KEY_VAULT_NAME }}
  RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
  CONTAINERAPPS_ENVIRONMENT: ${{ secrets.CONTAINERAPPS_ENVIRONMENT }} # <--- AGREGA ESTO EN TUS SECRETS
  SERVICE_NAME: 'users-api'

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ env.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ env.AZURE_CLIENT_SECRET }}",
              "tenantId": "${{ env.AZURE_TENANT_ID }}",
              "subscriptionId": "${{ env.AZURE_SUBSCRIPTION_ID }}"
            }

      - name: Get ACR Login Server from Azure Key Vault
        id: get_acr
        run: |
          ACR_LOGIN_SERVER=$(az keyvault secret show --vault-name ${{ env.KEY_VAULT_NAME }} --name acr-login-server --query value -o tsv)
          echo "ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER" >> $GITHUB_ENV

      - name: Docker Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ env.AZURE_CLIENT_ID }}
          password: ${{ env.AZURE_CLIENT_SECRET }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.ACR_LOGIN_SERVER }}/${{ env.SERVICE_NAME }}:${{ github.sha }},${{ env.ACR_LOGIN_SERVER }}/${{ env.SERVICE_NAME }}:latest
          context: .

      - name: Deploy or Update Container App
        run: |
          if az containerapp show --name ${{ env.SERVICE_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} &> /dev/null; then
            echo "Container App exists. Updating..."
            az containerapp update \
              --name ${{ env.SERVICE_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
              --image ${{ env.ACR_LOGIN_SERVER }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          else
            echo "Container App does not exist. Creating..."
            az containerapp create \
              --name ${{ env.SERVICE_NAME }} \
              --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
              --environment ${{ env.CONTAINERAPPS_ENVIRONMENT }} \
              --image ${{ env.ACR_LOGIN_SERVER }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
              --target-port 80 \
              --ingress external \
              --registry-server ${{ env.ACR_LOGIN_SERVER }}
          fi

      - name: Azure Logout
        run: az logout
